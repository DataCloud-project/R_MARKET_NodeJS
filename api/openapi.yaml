openapi: 3.0.1
info:
  title: DataCloud Node.JS Server
  description: "This is a sample server Petstore server.  You can find out more about\
    \     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,\
    \ #swagger](http://swagger.io/irc/).      For this sample, you can use the api\
    \ key `special-key` to test the authorization     filters."
  termsOfService: http://datacloud.swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://datacloud.swagger.io
servers:
- url: https://virtserver.swaggerhub.com/ssgUPC/NodeJS/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://datacloud.swagger.io/v2
- url: http://datacloud.swagger.io/v2
tags:
- name: Wallet-creation
  description: Operations about user
- name: findResources
  description: Extracts  the  resource requirements from the pipeline description
    and queries the marketplace for matching provider resources. ADA-PIPE uses this
    interface for scheduling the pipeline.
- name: createContract
  description: Provisions a set of resources by creating a smart contract with a beneficiary
    using a cryptographic signature from the requester. It returns the dealID.
- name: getResourcesForPipeline
  description: "Returns the provisioned resources (by returning the IP address of\
    \ the Worker nodes) for the input pipeline, authenticated and restricted to the\
    \ provided beneficiary."
paths:
  /user:
    post:
      tags:
      - Wallet-creation
      summary: Create Wallet for the User
      description: This can only be done by the logged in user.
      operationId: createWallet
      requestBody:
        description: Created user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        default:
          description: successful operation
          content: {}
      x-codegen-request-body-name: body
      x-swagger-router-controller: WalletCreation
  /resources:
    post:
      tags:
      - findResources
      summary: Find resources by DSL
      description: "Muliple tags can be provided with comma separated strings. Use\
        \         tag1, tag2, tag3 for testing."
      operationId: findResourcesByDSL
      requestBody:
        description: Tags to filter by DSL model
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/pipelineRequirements'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseDSL'
                x-content-type: application/json
        "400":
          description: Invalid tag value
          content: {}
      security:
      - datacloud_auth:
        - write:datcloudResources
        - read:datcloudResources
      x-codegen-request-body-name: DSL
      x-swagger-router-controller: FindResources
  /deal:
    post:
      tags:
      - createContract
      summary: request for creation of the contract
      operationId: placeOrder
      requestBody:
        description: request for initiation of the deal
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/createContract'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseForContractCreation'
        "400":
          description: Invalid Order
          content: {}
      x-codegen-request-body-name: Contract Initiation
      x-swagger-router-controller: CreateContract
  /deal/status:
    get:
      tags:
      - createContract
      summary: Returns the dealID and dealInfo for checking the status
      description: Returns a map of status codes to quantities
      operationId: getInventory
      parameters:
      - name: requestID
        in: query
        description: Please enter your requestID to know the status of the deal
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deal'
        "400":
          description: Contract has not been created yet! Come back after few minutes
          content: {}
      security:
      - api_key: []
      x-swagger-router-controller: CreateContract
  /resources/IP:
    get:
      tags:
      - getResourcesForPipeline
      summary: Returns the IP of provisioned resource
      description: Returns a map of status codes to quantities
      operationId: getResourcesForPipeline
      parameters:
      - name: dealID
        in: query
        description: Provide the dealID for collecting the Reserved resources' IP
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseforGetResource'
      security:
      - api_key: []
      x-swagger-router-controller: GetResourcesForPipeline
components:
  schemas:
    User:
      type: object
      properties:
        uid:
          type: string
      xml:
        name: User
    Param:
      type: object
      properties:
        req1:
          type: string
        req2:
          type: string
      example:
        req2: req2
        req1: req1
    Deal:
      type: object
      properties:
        dealID:
          type: string
        TxHash:
          type: string
        Block Timestamp:
          type: string
        requesterInfo:
          type: string
        maestroAgentID:
          type: string
        Callback:
          type: string
        app:
          type: string
        workerpool:
          type: array
          items:
            type: string
        dataset:
          type: string
        environmentParameters:
          $ref: '#/components/schemas/Param'
        volume:
          type: integer
          format: int64
        First task idx:
          type: string
        Block Number:
          type: integer
          format: int64
        Category:
          type: integer
          format: int64
        tee:
          type: boolean
        gpu-availability:
          type: boolean
        workerpoolprice:
          type: array
          items:
            type: integer
            format: int64
        appprice:
          type: integer
          format: int64
        datasetprice:
          type: integer
          format: int64
        Start Time:
          type: string
        Final Time:
          type: string
      example:
        app: app
        datasetprice: 2
        appprice: 5
        Category: 1
        requesterInfo: requesterInfo
        Block Number: 6
        dealID: dealID
        TxHash: TxHash
        Block Timestamp: Block Timestamp
        Start Time: Start Time
        workerpoolprice:
        - 5
        - 5
        Final Time: Final Time
        environmentParameters:
          req2: req2
          req1: req1
        volume: 0
        Callback: Callback
        maestroAgentID: maestroAgentID
        tee: true
        First task idx: First task idx
        gpu-availability: true
        dataset: dataset
        workerpool:
        - workerpool
        - workerpool
    executionRequirments:
      type: object
      properties:
        min-instant:
          type: integer
          format: int64
        max-instant:
          type: integer
          format: int64
    ResourceProvider:
      type: object
      properties:
        provider name:
          type: string
        instance type:
          type: string
        location:
          type: string
    environmentParameters:
      type: object
      properties:
        req1:
          type: string
        req2:
          type: string
    quantativeParameters:
      type: object
      properties:
        min-ncpu:
          type: integer
          format: int64
        max-ncpu:
          type: integer
          format: int64
        min-ram-mb:
          type: integer
          format: int64
        max-ram-mb:
          type: integer
          format: int64
        min-storage-mb:
          type: integer
          format: int64
        max-storage-mb:
          type: integer
          format: int64
        min-cores:
          type: integer
          format: int64
        max-cores:
          type: integer
          format: int64
      example:
        min-ncpu: 5
        min-cores: 4
        max-storage-mb: 2
        max-ram-mb: 9
        max-cores: 7
        max-ncpu: 2
        min-storage-mb: 3
        min-ram-mb: 7
    apporder:
      type: object
      properties:
        app:
          type: string
        appprice:
          type: string
        volume:
          type: integer
          format: int64
        tag:
          type: string
        datasetrestrict:
          type: string
        workerpoolrestrict:
          type: string
        requesterrestrict:
          type: string
      example:
        app: app
        volume: 0
        appprice: appprice
        datasetrestrict: datasetrestrict
        workerpoolrestrict: workerpoolrestrict
        requesterrestrict: requesterrestrict
        tag: tag
    datasetorder:
      type: object
      properties:
        dataset:
          type: string
        datasetprice:
          type: string
        volume:
          type: integer
          format: int64
        tag:
          type: string
        datasetrestrict:
          type: string
        workerpoolrestrict:
          type: string
        requesterrestrict:
          type: string
      example:
        volume: 6
        datasetprice: datasetprice
        datasetrestrict: datasetrestrict
        workerpoolrestrict: workerpoolrestrict
        requesterrestrict: requesterrestrict
        tag: tag
        dataset: dataset
    workerpoolorder:
      type: object
      properties:
        workerpool:
          type: string
        workerpoolprice:
          type: string
        noofInstances:
          type: integer
          format: int64
        OSdetails:
          type: array
          xml:
            name: OSdetails
            wrapped: true
          items:
            $ref: '#/components/schemas/osRequirement'
        quantativeParameters:
          $ref: '#/components/schemas/quantativeParameters'
        tee:
          type: boolean
        gpu-availability:
          type: boolean
        arch-type:
          type: array
          xml:
            name: archType
            wrapped: true
          items:
            $ref: '#/components/schemas/processorArchitecture'
        datasetrestrict:
          type: string
        apprestrict:
          type: string
        requesterrestrict:
          type: string
      example:
        datasetrestrict: datasetrestrict
        arch-type:
        - cpu-architecture: cpu-architecture
          gpu-architecture: gpu-architecture
        - cpu-architecture: cpu-architecture
          gpu-architecture: gpu-architecture
        requesterrestrict: requesterrestrict
        tee: true
        OSdetails:
        - os-type: os-type
          is-64: 5
        - os-type: os-type
          is-64: 5
        apprestrict: apprestrict
        noofInstances: 1
        gpu-availability: true
        workerpoolprice: workerpoolprice
        quantativeParameters:
          min-ncpu: 5
          min-cores: 4
          max-storage-mb: 2
          max-ram-mb: 9
          max-cores: 7
          max-ncpu: 2
          min-storage-mb: 3
          min-ram-mb: 7
        workerpool: workerpool
    appordersign:
      type: object
      properties:
        app:
          type: string
        appprice:
          type: string
        volume:
          type: integer
          format: int64
        tag:
          type: string
        datasetrestrict:
          type: string
        workerpoolrestrict:
          type: string
        requesterrestrict:
          type: string
        salt:
          type: string
        sign:
          type: string
    datasetordersign:
      type: object
      properties:
        dataset:
          type: string
        datasetprice:
          type: string
        volume:
          type: integer
          format: int64
        tag:
          type: string
        datasetrestrict:
          type: string
        workerpoolrestrict:
          type: string
        requesterrestrict:
          type: string
        salt:
          type: string
        sign:
          type: string
    workerpoolordersign:
      type: object
      properties:
        workerpool:
          type: string
        workerpoolprice:
          type: string
        noofInstances:
          type: integer
          format: int64
        OSdetails:
          type: array
          xml:
            name: OSdetails
            wrapped: true
          items:
            $ref: '#/components/schemas/osRequirement'
        quantativeParameters:
          $ref: '#/components/schemas/quantativeParameters'
        tee:
          type: boolean
        gpu-availability:
          type: boolean
        arch-type:
          type: array
          xml:
            name: archType
            wrapped: true
          items:
            $ref: '#/components/schemas/processorArchitecture'
        datasetrestrict:
          type: string
        apprestrict:
          type: string
        requesterrestrict:
          type: string
        salt:
          type: string
        sign:
          type: string
    ResponseDSL:
      type: object
      properties:
        apporder:
          $ref: '#/components/schemas/apporder'
        datasetorder:
          $ref: '#/components/schemas/datasetorder'
        workerpoolsorder:
          type: array
          xml:
            name: workerpool
            wrapped: true
          items:
            $ref: '#/components/schemas/workerpoolorder'
      example:
        apporder:
          app: app
          volume: 0
          appprice: appprice
          datasetrestrict: datasetrestrict
          workerpoolrestrict: workerpoolrestrict
          requesterrestrict: requesterrestrict
          tag: tag
        workerpoolsorder:
        - datasetrestrict: datasetrestrict
          arch-type:
          - cpu-architecture: cpu-architecture
            gpu-architecture: gpu-architecture
          - cpu-architecture: cpu-architecture
            gpu-architecture: gpu-architecture
          requesterrestrict: requesterrestrict
          tee: true
          OSdetails:
          - os-type: os-type
            is-64: 5
          - os-type: os-type
            is-64: 5
          apprestrict: apprestrict
          noofInstances: 1
          gpu-availability: true
          workerpoolprice: workerpoolprice
          quantativeParameters:
            min-ncpu: 5
            min-cores: 4
            max-storage-mb: 2
            max-ram-mb: 9
            max-cores: 7
            max-ncpu: 2
            min-storage-mb: 3
            min-ram-mb: 7
          workerpool: workerpool
        - datasetrestrict: datasetrestrict
          arch-type:
          - cpu-architecture: cpu-architecture
            gpu-architecture: gpu-architecture
          - cpu-architecture: cpu-architecture
            gpu-architecture: gpu-architecture
          requesterrestrict: requesterrestrict
          tee: true
          OSdetails:
          - os-type: os-type
            is-64: 5
          - os-type: os-type
            is-64: 5
          apprestrict: apprestrict
          noofInstances: 1
          gpu-availability: true
          workerpoolprice: workerpoolprice
          quantativeParameters:
            min-ncpu: 5
            min-cores: 4
            max-storage-mb: 2
            max-ram-mb: 9
            max-cores: 7
            max-ncpu: 2
            min-storage-mb: 3
            min-ram-mb: 7
          workerpool: workerpool
        datasetorder:
          volume: 6
          datasetprice: datasetprice
          datasetrestrict: datasetrestrict
          workerpoolrestrict: workerpoolrestrict
          requesterrestrict: requesterrestrict
          tag: tag
          dataset: dataset
    workerpoolorderdetails:
      type: object
      properties:
        workerpool:
          type: string
        workerIP:
          type: string
      example:
        workerpool: workerpool
        workerIP: workerIP
    processorArchitecture:
      type: object
      properties:
        cpu-architecture:
          type: string
        gpu-architecture:
          type: string
      example:
        cpu-architecture: cpu-architecture
        gpu-architecture: gpu-architecture
    createContract:
      type: object
      properties:
        pipelineID:
          type: string
        apporder:
          $ref: '#/components/schemas/appordersign'
        datasetorder:
          $ref: '#/components/schemas/datasetordersign'
        workerpoolorder:
          type: array
          xml:
            name: selectedworkerpool
            wrapped: true
          items:
            $ref: '#/components/schemas/workerpoolordersign'
        maestroAgentID:
          type: string
        requesterInfo:
          type: string
        sign:
          type: string
    responseforGetResource:
      type: object
      properties:
        pipelineID:
          type: string
        dealID:
          type: string
        workerpoolInfo:
          type: array
          xml:
            name: workerpoolInfo
            wrapped: true
          items:
            $ref: '#/components/schemas/workerpoolorderdetails'
      example:
        dealID: dealID
        workerpoolInfo:
        - workerpool: workerpool
          workerIP: workerIP
        - workerpool: workerpool
          workerIP: workerIP
        pipelineID: pipelineID
    responseForContractCreation:
      type: object
      properties:
        requesterInfo:
          type: string
        requestID:
          type: string
        status:
          type: string
      example:
        requesterInfo: requesterInfo
        requestID: requestID
        status: status
    pipelineRequirements:
      type: object
      properties:
        pipelineID:
          type: string
        requirements:
          $ref: '#/components/schemas/requestorder'
    requestorder:
      type: object
      properties:
        appmaxprice:
          type: integer
          format: int64
        datasetmaxprice:
          type: integer
          format: int64
        workerpoolmaxprice:
          type: integer
          format: int64
        executionRequirements:
          $ref: '#/components/schemas/executionRequirments'
        quantativeParameters:
          $ref: '#/components/schemas/quantativeParameters'
        ResourceProvider:
          $ref: '#/components/schemas/ResourceProvider'
        osRequirement:
          $ref: '#/components/schemas/osRequirement'
        cpu-architecture:
          type: string
        gpu-architecture:
          type: string
        gpu-availability:
          type: boolean
        tee:
          type: boolean
        maestroAgentID:
          type: string
        environmentParameters:
          $ref: '#/components/schemas/environmentParameters'
        requesterInfo:
          type: string
    osRequirement:
      type: object
      properties:
        os-type:
          type: string
        is-64:
          type: integer
          format: int64
      example:
        os-type: os-type
        is-64: 5
  securitySchemes:
    datacloud_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://datacloud.swagger.io/oauth/dialog
          scopes:
            write:datcloudResources: modify order in your account
            read:datcloudResources: read your order
    api_key:
      type: apiKey
      name: api_key
      in: header
